name: Frontend CI
# git hub triggers
on:
    workflow_dispatch:
    push:
        branches:
        - main
    pull_request:
        branches:
            - main

jobs:
    lint:
      name: Lint
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: frontend
      steps:
        - name: Checkout Repo
          uses: actions/checkout@v4
  
        - name: Setting up NodeJS
          uses: actions/setup-node@v4
          with:
            node-version:
                18.14.2 
  
        - name: Cache Dependencies
          id: caching-node-modules
          uses: actions/cache@v3
          with:
            path: ~/.npm
            key: node-modules-dependencies-${{ hashFiles('**/package-lock.json') }}
          
        - name: Install dependencies
          # only run npm i if cache not found
          if: steps.caching-node-modules.outputs.cache-hit != 'true'
          run: cd frontend && npm install
    
        - name: Running Lint
          run: cd frontend && npm run lint
  
    # test:
    #   name: Test
    #   runs-on: ubuntu-latest
    #   defaults:
    #     run:
    #       working-directory: frontend
    #   steps:
    #     - name: Checking Out the code from Repo
    #       uses: actions/checkout@v3
  
    #     - name: Setting up NodeJS
    #       uses: actions/setup-node@v3
    #       with:
    #         node-version: 16.16.0
  
    #     - name: Cache before dependency install
    #       id: CachingData
    #       uses: actions/cache@v3
    #       with:
    #         path: ~/.npm
    #         key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
          
    #     - name: Installing dependencies
    #       run: npm ci
  
    #     - name: Now Running Tests
    #       run: npm run test
  
    # build:
    #   name: Build
    #   runs-on: ubuntu-latest
    #   needs: [lint,test]
    #   defaults:
    #     run:
    #       working-directory: frontend
    #   steps:
    #     - name: Checking Out the code from Repo
    #       uses: actions/checkout@v3
  
    #     - name: Building the Image
    #       run: docker build .